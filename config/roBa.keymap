#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W           &kp E           &kp R      &kp T                                   &kp Y  &kp U  &kp I                &kp O              &kp P
&mt LEFT_SHIFT A  &kp S           &kp D           &kp F      &kp G  &kp ESCAPE        &kp BACKSPACE  &kp H  &kp J  &kp K                &kp L              &mt RIGHT_SHIFT SEMI
&mt LCTRL Z       &mt LEFT_GUI X  &mt LEFT_ALT C  &kp V      &kp B  &kp CAPSLOCK      &kp ENTER      &kp N  &kp M  &mt RIGHT_ALT COMMA  &mt RIGHT_GUI DOT  &mt RCTRL SLASH
&msc SCRL_UP      &msc SCRL_DOWN  &kp LA(TAB)     &kp SPACE  &mo 2  &mkp LCLK         &mkp RCLK      &mo 1                                                 &kp MINUS
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        FUNC-NUM {
            bindings = <
&kp F1             &kp F2  &kp F3  &kp F4    &kp F5                         &kp F6    &kp F7    &kp F8  &kp F9  &kp F10
&mt LEFT_SHIFT N1  &kp N2  &kp N3  &kp N4    &kp N5     &trans      &trans  &kp N6    &kp N7    &kp N8  &kp N9  &mt RIGHT_SHIFT N0
&trans             &trans  &trans  &kp APOS  &kp EQUAL  &trans      &trans  &kp LBKT  &kp RBKT  &trans  &trans  &trans
&trans             &trans  &trans  &trans    &trans     &trans      &trans  &trans                              &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE  &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN    &kp HOME                      &kp HOME  &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN    &kp DELETE
&kp TAB     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END   &trans      &trans  &kp END   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp INSERT
&trans      &trans          &trans          &trans           &trans    &trans      &trans  &trans    &trans          &trans          &trans           &trans
&trans      &trans          &trans          &trans           &trans    &trans      &trans  &trans                                                     &trans
            >;
        };
    };
};
